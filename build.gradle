plugins {
  id 'java'
  id 'war'
  id 'org.hidetake.ssh' version '2.10.0'
}

group 'web'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

dependencies {
  compileOnly('jakarta.platform:jakarta.jakartaee-web-api:9.1.0')
  implementation('org.primefaces:primefaces:13.0.0:jakarta')
  implementation('org.postgresql:postgresql:42.6.0')
  implementation 'com.google.code.gson:gson:2.7'
}

remotes {
  webServer {
    host = 'helios.cs.ifmo.ru'
    port = 2222
    user = project.property("lab3ScpUsername")
    password = project.property("lab3ScpPassword")
  }
}

task scp(dependsOn: build) {
  doLast {
    var warFile = buildDir.toString() + "/libs/itmo_web_3.war"
    ssh.run {
      session(remotes.webServer) {
        put from: warFile, into: './itmo_web_3.war'
      }
    }
  }
}

tasks.register('history') {
    gitStash()
    findWorkingVersion()
    new File("diff.txt").withWriter('utf-8') { writer ->
        writer.writeLine gitDiff()
    }
    gitCheckoutMaster()
    gitStashPop()
}

def gitStash() {
    exec {
        commandLine 'git', 'stash'
    }
}

def gitStashPop() {
    exec {
        commandLine 'git', 'stash', 'pop'
    }
}

String gitDiff() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'diff', 'stash', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def gitCheckoutPrevious() {
    exec {
        commandLine 'git', 'checkout', 'HEAD^'
    }

}

def gitCheckoutMaster() {
    exec {
        commandLine 'git', 'checkout', 'master'
    }
}

def findWorkingVersion() {
    while (!is_compile()) {
        try {
            gitCheckoutPrevious()
        } catch (e) {
            println 'не найдено ни одной рабочей версии'
            return
        }
    }
}

def is_compile() {
    try {
        exec {
            commandLine './gradlew', 'compileJava'
        }
    } catch (e) {
        println e.message
        return false
    }
    return true
}